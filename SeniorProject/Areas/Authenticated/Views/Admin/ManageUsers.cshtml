@model List<SeniorProject.Areas.Authenticated.Models.ManageUsersAndRolesViewModel> 
@{
    
    ViewData["Title"] = "Manage Users";
}

<!--Use bootstrap table class to style the table-->
<table class="table">
    <!--give the table descriptive headers-->
    <thead>
        <tr>
            <th>Username</th>
            <th>Member info: FirstName</th>
            <th>Member info: LastName</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Active</th>
            <th>Role</th>
        </tr>        
    </thead>
    <!--add the table body-->
    <tbody>
        <!--Use razor syntax to dynamically create table row elements for the properties of each view model in the list-->
        @foreach (SeniorProject.Areas.Authenticated.Models.ManageUsersAndRolesViewModel UserAndRole in Model)
        {
            <tr>
                <!--Use inline razor expressions to add the iteration index's model property values -->
                <th>@UserAndRole.UserName</th>
                <th>@UserAndRole.FirstName</th>
                <th>@UserAndRole.LastName</th>
                <th>@UserAndRole.Email</th>
                <th>@UserAndRole.Phone</th>
                <th>@UserAndRole.Active.ToString()</th>
                <th>@UserAndRole.RoleName</th>
                <!--Each record will have a link styled as a bootstrap btn to add or edit.The route data of the row's model's id is used-->
                <th><a asp-area="Authenticated" asp-controller="Admin" asp-action="EditUser" asp-route-Id="@UserAndRole.IdentityUserID">Edit</a></th>
                <th><a asp-area="Authenticated" asp-controller="Admin" asp-action="DeleteUser" asp-route-Id="@UserAndRole.IdentityUserID">Delete</a></th>
            </tr>
        }
    </tbody>
</table>
<!--Add a link styled as a bootstrap btn-primary to add a new record-->
<a asp-area="Authenticated" asp-controller="Admin" asp-action="AddUser" class="btn-primary">Add User</a>

<!--Use a razor code block to check for tempdata with a key that is named change. If it does find one, it inserts a h4 element with the value-->
@if (TempData.Keys.Contains("Change"))
{
    //This is used to dynamically reflect addition success, delete success, or edit success
    <h4 class="bg-info text-center text-white p-2">
        @TempData["Change"]
    </h4>
}


